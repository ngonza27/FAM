{"version":3,"file":"ngx-gauge.umd.js.map","sources":["ng://ngx-gauge/common/util.ts","ng://ngx-gauge/gauge/gauge-directives.ts","ng://ngx-gauge/gauge/gauge.ts","ng://ngx-gauge/ngx-gauge.module.ts"],"sourcesContent":["export function clamp(value: number, min: number, max: number): number {\r\n    return Math.max(min, Math.min(max, value));\r\n}\r\nexport function coerceBooleanProperty(value: any): boolean {\r\n    return value != null && `${value}` !== 'false';\r\n}\r\nexport function coerceNumberProperty(value: any, fallbackValue: number = 0): number {\r\n    return isNaN(parseFloat(value)) || isNaN(Number(value)) ? fallbackValue : Number(value);\r\n}\r\nexport function cssUnit(value: number) {\r\n    return `${value}px`;\r\n}\r\nexport function isNumber(value: string) {\r\n    return value != undefined && !isNaN(parseFloat(value)) && !isNaN(Number(value));\r\n}","import { Directive } from \"@angular/core\";\r\n\r\n@Directive({\r\n  selector: \"ngx-gauge-append\",\r\n  exportAs: \"ngxGaugeAppend\"\r\n})\r\nexport class NgxGaugeAppend {}\r\n\r\n@Directive({\r\n  selector: \"ngx-gauge-prepend\",\r\n  exportAs: \"ngxGaugePrepend\"\r\n})\r\nexport class NgxGaugePrepend {}\r\n\r\n@Directive({\r\n  selector: \"ngx-gauge-value\",\r\n  exportAs: \"ngxGaugeValue\"\r\n})\r\nexport class NgxGaugeValue {}\r\n\r\n@Directive({\r\n  selector: \"ngx-gauge-label\",\r\n  exportAs: \"ngxGaugeLabel\"\r\n})\r\nexport class NgxGaugeLabel {}\r\n","import {\r\n    Component,\r\n    Input,\r\n    SimpleChanges,\r\n    ViewEncapsulation,\r\n    Renderer,\r\n    AfterViewInit,\r\n    ElementRef,\r\n    OnChanges,\r\n    OnDestroy,\r\n    ViewChild,\r\n    ContentChild\r\n} from '@angular/core';\r\nimport { NgxGaugeError } from './gauge-error';\r\nimport {\r\n    clamp,\r\n    coerceBooleanProperty,\r\n    coerceNumberProperty,\r\n    cssUnit,\r\n    isNumber\r\n} from '../common/util';\r\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge-directives';\r\n\r\nconst DEFAULTS = {\r\n    MIN: 0,\r\n    MAX: 100,\r\n    TYPE: 'arch',\r\n    THICK: 4,\r\n    FOREGROUND_COLOR: 'rgba(0, 150, 136, 1)',\r\n    BACKGROUND_COLOR: 'rgba(0, 0, 0, 0.1)',\r\n    CAP: 'butt',\r\n    SIZE: 200\r\n};\r\n\r\nexport type NgxGaugeType = 'full' | 'arch' | 'semi';\r\nexport type NgxGaugeCap = 'round' | 'butt';\r\n\r\n@Component({\r\n    selector: 'ngx-gauge',\r\n    templateUrl: 'gauge.html',\r\n    styleUrls: ['gauge.css'],\r\n    host: {\r\n        'role': 'slider',\r\n        'aria-readonly': 'true',\r\n        '[class.ngx-gauge-meter]': 'true',\r\n        '[attr.aria-valuemin]': 'min',\r\n        '[attr.aria-valuemax]': 'max',\r\n        '[attr.aria-valuenow]': 'value',\r\n        '[attr.aria-label]': 'ariaLabel',\r\n        '[attr.aria-labelledby]': 'ariaLabelledby'\r\n\r\n    },\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NgxGauge implements AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    @ViewChild('canvas') _canvas: ElementRef;\r\n\r\n    @ContentChild(NgxGaugeLabel) _labelChild: NgxGaugeLabel;\r\n    @ContentChild(NgxGaugePrepend) _prependChild: NgxGaugePrepend;\r\n    @ContentChild(NgxGaugeAppend) _appendChild: NgxGaugeAppend;\r\n    @ContentChild(NgxGaugeValue) _valueDisplayChild: NgxGaugeValue;\r\n\r\n    private _size: number = DEFAULTS.SIZE;\r\n    private _min: number = DEFAULTS.MIN;\r\n    private _max: number = DEFAULTS.MAX;\r\n    private _animate: boolean = true;\r\n\r\n    private _initialized: boolean = false;\r\n    private _context: CanvasRenderingContext2D;\r\n    private _animationRequestID: number = 0;\r\n\r\n    @Input('aria-label') ariaLabel: string = '';\r\n\r\n    @Input('aria-labelledby') ariaLabelledby: string | null = null;\r\n\r\n    @Input()\r\n    get size(): number { return this._size; }\r\n    set size(value: number) {\r\n        this._size = coerceNumberProperty(value);\r\n    }\r\n\r\n    @Input()\r\n    get min(): number { return this._min; }\r\n    set min(value: number) {\r\n        this._min = coerceNumberProperty(value, DEFAULTS.MIN);\r\n    }\r\n    @Input()\r\n    get animate(): boolean { return this._animate; }\r\n    set animate(value) {\r\n        this._animate = coerceBooleanProperty(value);\r\n    }\r\n\r\n    @Input()\r\n    get max(): number { return this._max; }\r\n    set max(value: number) {\r\n        this._max = coerceNumberProperty(value, DEFAULTS.MAX);\r\n    }\r\n\r\n    @Input() type: NgxGaugeType = DEFAULTS.TYPE as NgxGaugeType;\r\n\r\n    @Input() cap: NgxGaugeCap = DEFAULTS.CAP as NgxGaugeCap;\r\n\r\n    @Input() thick: number = DEFAULTS.THICK;\r\n\r\n    @Input() label: string;\r\n\r\n    @Input() append: string;\r\n\r\n    @Input() prepend: string;\r\n\r\n    @Input() foregroundColor: string = DEFAULTS.FOREGROUND_COLOR;\r\n\r\n    @Input() backgroundColor: string = DEFAULTS.BACKGROUND_COLOR;\r\n\r\n    @Input() thresholds: Object = Object.create(null);\r\n\r\n    private _value: number = 0;\r\n\r\n    @Input()\r\n    get value() { return this._value; }\r\n    set value(val: number) {\r\n        this._value = coerceNumberProperty(val);\r\n    }\r\n\r\n    @Input() duration: number = 1200;\r\n\r\n    constructor(private _elementRef: ElementRef, private _renderer: Renderer) { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        const isCanvasPropertyChanged = changes['thick'] || changes['type'] || changes['cap'] || changes['size'];\r\n        const isDataChanged = changes['value'] || changes['min'] || changes['max'];\r\n\r\n        if (this._initialized) {\r\n            if (isDataChanged) {\r\n                let nv, ov;\r\n                if (changes['value']) {\r\n                    nv = changes['value'].currentValue;\r\n                    ov = changes['value'].previousValue;\r\n                }\r\n                this._update(nv, ov);\r\n            } \r\n            if (isCanvasPropertyChanged) {\r\n                this._destroy();\r\n                this._init();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _updateSize() {\r\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'width', cssUnit(this._size));\r\n        this._renderer.setElementStyle(this._elementRef.nativeElement, 'height', cssUnit(this._size));\r\n        this._canvas.nativeElement.width = this.size;\r\n        this._canvas.nativeElement.height = this.size;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this._canvas) {\r\n            this._init();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this._destroy();\r\n    }\r\n\r\n    private _getBounds(type: NgxGaugeType) {\r\n        let head, tail;\r\n        if (type == 'semi') {\r\n            head = Math.PI;\r\n            tail = 2 * Math.PI;\r\n        } else if (type == 'full') {\r\n            head = 1.5 * Math.PI;\r\n            tail = 3.5 * Math.PI;\r\n        } else if (type === 'arch') {\r\n            head = 0.8 * Math.PI;\r\n            tail = 2.2 * Math.PI;\r\n        }\r\n        return { head, tail };\r\n    }\r\n\r\n    private _drawShell(start: number, middle: number, tail: number, color: string) {\r\n        let center = this._getCenter(),\r\n            radius = this._getRadius();\r\n\r\n        middle = Math.max(middle, start); // never below 0%\r\n        middle = Math.min(middle, tail); // never exceed 100%\r\n        if (this._initialized) {\r\n            this._clear();\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = this.backgroundColor;\r\n            this._context.arc(center.x, center.y, radius, middle, tail, false);\r\n            this._context.stroke();\r\n\r\n            this._context.beginPath();\r\n            this._context.strokeStyle = color;\r\n            this._context.arc(center.x, center.y, radius, start, middle, false);\r\n            this._context.stroke();\r\n        }\r\n    }\r\n\r\n    private _clear() {\r\n        this._context.clearRect(0, 0, this._getWidth(), this._getHeight());\r\n    }\r\n\r\n    private _getWidth() {\r\n        return this.size;\r\n    }\r\n\r\n    private _getHeight() {\r\n        return this.size;\r\n    }\r\n\r\n    private _getRadius() {\r\n        var center = this._getCenter();\r\n        return center.x - this.thick;\r\n    }\r\n\r\n    private _getCenter() {\r\n        var x = this._getWidth() / 2,\r\n            y = this._getHeight() / 2;\r\n        return { x, y };\r\n    }\r\n\r\n    private _init() {\r\n        this._context = (this._canvas.nativeElement as HTMLCanvasElement).getContext('2d');\r\n        this._initialized = true;\r\n        this._updateSize();\r\n        this._setupStyles();\r\n        this._create();\r\n    }\r\n\r\n    private _destroy() {\r\n        if (this._animationRequestID) {\r\n            window.cancelAnimationFrame(this._animationRequestID);\r\n            this._animationRequestID = 0;\r\n        }\r\n        this._clear();\r\n        this._context = null;\r\n        this._initialized = false;\r\n    }\r\n\r\n    private _setupStyles() {\r\n        this._context.lineCap = this.cap;\r\n        this._context.lineWidth = this.thick;\r\n    }\r\n\r\n    private _getForegroundColorByRange(value) {\r\n\r\n        const match = Object.keys(this.thresholds)\r\n            .filter(function (item) { return isNumber(item) && Number(item) <= value })\r\n            .sort((a, b) => Number(a) - Number(b))\r\n            .reverse()[0];\r\n\r\n        return match !== undefined\r\n            ? this.thresholds[match].color || this.foregroundColor\r\n            : this.foregroundColor;\r\n    }\r\n\r\n    private _create(nv?: number, ov?: number) {\r\n        let self = this,\r\n            type = this.type,\r\n            bounds = this._getBounds(type),\r\n            duration = this.duration,\r\n            min = this.min,\r\n            max = this.max,\r\n            value = clamp(this.value, this.min, this.max),\r\n            start = bounds.head,\r\n            unit = (bounds.tail - bounds.head) / (max - min),\r\n            displacement = unit * (value - min),\r\n            tail = bounds.tail,\r\n            color = this._getForegroundColorByRange(value),\r\n            startTime;\r\n\r\n        if (self._animationRequestID) {\r\n            window.cancelAnimationFrame(self._animationRequestID);\r\n        }\r\n\r\n        function animate(timestamp) {\r\n            timestamp = timestamp || new Date().getTime();\r\n            let runtime = timestamp - startTime;\r\n            let progress = Math.min(runtime / duration, 1);\r\n            let previousProgress = ov ? (ov - min) * unit : 0;\r\n            let middle = start + previousProgress + displacement * progress;\r\n\r\n            self._drawShell(start, middle, tail, color);\r\n            if (self._animationRequestID && (runtime < duration)) {\r\n                self._animationRequestID = window.requestAnimationFrame((timestamp) => animate(timestamp));\r\n            } else {\r\n                window.cancelAnimationFrame(self._animationRequestID);\r\n            }\r\n        }\r\n        if (this._animate) {\r\n            if (nv != undefined && ov != undefined) {\r\n                displacement = unit * nv - unit * ov;\r\n            }\r\n            self._animationRequestID = window.requestAnimationFrame((timestamp) => {\r\n                startTime = timestamp || new Date().getTime();\r\n                animate(startTime);\r\n            });\r\n        } else {\r\n            self._drawShell(start, start + displacement, tail, color);\r\n        }\r\n    }\r\n\r\n    private _update(nv: number, ov: number) {\r\n        this._clear();\r\n        this._create(nv, ov);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxGauge } from './gauge/gauge';\r\nimport { NgxGaugeLabel, NgxGaugeValue, NgxGaugePrepend, NgxGaugeAppend } from './gauge/gauge-directives';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel],\r\n  exports: [NgxGauge, NgxGaugeAppend, NgxGaugePrepend, NgxGaugeValue, NgxGaugeLabel]\r\n})\r\nexport class NgxGaugeModule { }"],"names":["Directive","Component","ViewEncapsulation","ElementRef","Renderer","ViewChild","ContentChild","Input","NgModule","CommonModule"],"mappings":"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"}
